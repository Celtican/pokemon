package com.celtican.pokemon.screens;

import com.badlogic.gdx.audio.Music;
import com.badlogic.gdx.audio.Sound;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.graphics.g2d.TextureAtlas;
import com.badlogic.gdx.math.MathUtils;
import com.celtican.pokemon.Game;
import com.celtican.pokemon.utils.data.Ability;
import com.celtican.pokemon.utils.data.Move;
import com.celtican.pokemon.utils.data.PartyPokemon;
import com.celtican.pokemon.utils.data.Pokemon.EggGroup;
import com.celtican.pokemon.utils.data.Pokemon.StatusCondition;
import com.celtican.pokemon.utils.graphics.TextureArray;

import static com.celtican.pokemon.utils.data.Pokemon.ContestType.*;
import static com.celtican.pokemon.utils.data.Pokemon.ExpGrowth.ERRATIC;
import static com.celtican.pokemon.utils.data.Pokemon.ExpGrowth.MEDIUM_SLOW;
import static com.celtican.pokemon.utils.data.Pokemon.GenderRatio.FEMALE_IS_RARE;
import static com.celtican.pokemon.utils.data.Pokemon.GenderRatio.GENDERLESS;
import static com.celtican.pokemon.utils.data.Pokemon.MoveCategory.*;
import static com.celtican.pokemon.utils.data.Pokemon.MoveTargets.*;
import static com.celtican.pokemon.utils.data.Pokemon.Type.*;

public class LoadingScreen extends Screen {

    private final TextureArray loadingAnimation;

    private int stage = 0;

    public LoadingScreen() {
        loadingAnimation = new TextureArray("spritesheets/loading.atlas", "loading");
        Game.game.assets.preLoad("misc/pixel.png", Texture.class);
    }

    @Override public void show() {
        Game.game.canvas.setClearColor(0, 0, 0, 1);
    }
    @Override public void hide() {
        Game.game.canvas.resetClearColor();
    }
    @Override public void render() {
        int x = Game.game.canvas.getWidth()/2 - loadingAnimation.getWidth()/2;
        int y = Game.game.canvas.getHeight()/2 - loadingAnimation.getHeight()/2;
        int frame;
        switch (Game.game.frame/4 % 20) {
            case 1:
            case 3:
            case 14:
                x += 1;
                frame = 3;
                break;
            case 2:
                x += 2;
                frame = 4;
                break;
            case 4:
            case 10:
            case 12:
                x += -1;
                frame = 1;
                break;
            case 11:
                x += -2;
                frame = 0;
                break;
            default:
                frame = 2;
        }
        loadingAnimation.setFrame(frame);
        loadingAnimation.render(x, y);

        Game.game.canvas.drawRect(Game.game.canvas.getWidth()/2 - 5, Game.game.canvas.getHeight()/2 - 6, 11, 1, Color.DARK_GRAY);
        float progress;
        switch (stage) {
            case 0:
                progress = 0;
                break;
            case 1:
                progress = Game.game.assets.getProgress();
                break;
            default:
                progress = 1;
        }
        Game.game.canvas.drawRect(Game.game.canvas.getWidth()/2 - 5, Game.game.canvas.getHeight()/2 - 6,
                MathUtils.round(progress*11), 1, Color.WHITE);
    }
    @Override public void update() {
        switch (stage) {
            case 0:
                if (Game.game.assets.heavyUpdate()) {
                    Game.game.canvas.setup();
                    startLoadAssets();
                    stage++;
                }
                break;
            case 1:
                if (Game.game.assets.heavyUpdate()) {
                    addSpecies();
                    addMoves();
                    addAbilities();
                    addItems();
                    stage++;
                }
                break;
            case 2:
                finalizeLoad();
                stage++;
                break;
        }
    }

    private void startLoadAssets() {
        Game.game.assets.preLoad("sfx/battleExpRise.ogg", Sound.class);
        Game.game.assets.preLoad("sfx/battleExpFull.ogg", Sound.class);
        Game.game.assets.preLoad("sfx/battleBallClick.ogg", Sound.class);
        Game.game.assets.preLoad("sfx/battleBallShake.ogg", Sound.class);
        Game.game.assets.preLoad("sfx/battleBallEscape.ogg", Sound.class);
        Game.game.assets.preLoad("sfx/battleFlee.ogg", Sound.class);
        Game.game.assets.preLoad("sfx/battleDamage.ogg", Sound.class);
        Game.game.assets.preLoad("sfx/battleDamageSuper.ogg", Sound.class);
        Game.game.assets.preLoad("sfx/battleDamageWeak.ogg", Sound.class);
        Game.game.assets.preLoad("sfx/guiCursor.ogg", Sound.class);
        Game.game.assets.preLoad("sfx/guiSelect.ogg", Sound.class);

        Game.game.assets.preLoad("bgm/evolutionStart.ogg", Music.class);
        Game.game.assets.preLoad("bgm/evolution.ogg", Music.class);
        Game.game.assets.preLoad("bgm/evolutionFanfare.ogg", Music.class);
        Game.game.assets.preLoad("bgm/route29.ogg", Music.class);
        Game.game.assets.preLoad("bgm/wildBattle.ogg", Music.class);
        Game.game.assets.preLoad("bgm/trainerBattle.ogg", Music.class);

        for (int i = 1; i <= 20; i++) {
            Game.game.assets.preLoad("sfx/cries/" + i + ".ogg", Sound.class);
            Game.game.assets.preLoad("spritesheets/pokemon/" + i + ".atlas", TextureAtlas.class);
        }
        Game.game.assets.preLoad("spritesheets/overworldItems.atlas", TextureAtlas.class);
//                    game.assets.load("spritesheets/watch.atlas", TextureAtlas.class);
        Game.game.assets.preLoad("spritesheets/forest.atlas", TextureAtlas.class);
//                    game.assets.load("spritesheets/jungle.atlas", TextureAtlas.class);
//                    game.assets.load("spritesheets/testTiles.atlas", TextureAtlas.class);
        Game.game.assets.preLoad("spritesheets/indoor.atlas", TextureAtlas.class);
        Game.game.assets.preLoad("spritesheets/overworld.atlas", TextureAtlas.class);
        Game.game.assets.preLoad("spritesheets/juniper.atlas", TextureAtlas.class);
        Game.game.assets.preLoad("spritesheets/player.atlas", TextureAtlas.class);
        Game.game.assets.preLoad("spritesheets/nurse.atlas", TextureAtlas.class);
        Game.game.assets.preLoad("spritesheets/battle.atlas", TextureAtlas.class);

        Game.game.assets.preLoad("misc/fontSmall.fnt", BitmapFont.class);
    }
    private void addSpecies() {
        Game.game.data.addSpecies("Nullomon", GENDERLESS, NORMAL, NORMAL, EggGroup.UNDISCOVERED, EggGroup.UNDISCOVERED, ERRATIC,
                0, 0, 0, 0, 20, 20, 20, 20, 20, 20, 1, 1, 1, 0, 0, 0, 0, 0, 0,
                -1, -1, null, null);
        Game.game.data.addSpecies("Bulbasaur", FEMALE_IS_RARE, GRASS, POISON, EggGroup.MONSTER, EggGroup.GRASS, MEDIUM_SLOW,
                65, 65, 34, 34, 45, 49, 49, 65, 65, 45, 45, 50, 46, 0, 0, 0, 1, 0, 0,
                2, 16, new int[] {33, 45, 22, 74, 73, 75, 77, 79, 402, 36, 230, 235, 388, 38, 76}, new int[] {0, 0, 3, 6, 9, 12, 15, 15, 18, 21, 24, 27, 30, 33, 36});
        Game.game.data.addSpecies("Ivysaur", FEMALE_IS_RARE, GRASS, POISON, EggGroup.MONSTER, EggGroup.GRASS, MEDIUM_SLOW,
                65, 65, 34, 34, 60, 62, 63, 80, 80, 60, 45, 50, 142, 0, 0, 0, 1, 0, 0,
                3, 32, new int[] {33, 45, 22, 74, 73, 75, 77, 79, 402, 36, 230, 235, 388, 38, 76}, new int[] {0, 0, 0, 0, 9, 12, 15, 15, 20, 25, 30, 35, 40, 45, 50});
        Game.game.data.addSpecies("Venusaur", FEMALE_IS_RARE, GRASS, POISON, EggGroup.MONSTER, EggGroup.GRASS, MEDIUM_SLOW,
                65, 65, 34, 34, 80, 82, 83, 100, 100, 80, 45, 50, 236, 0, 0, 0, 2, 1, 0,
                -1, -1, new int[] {572, 572, 80, 33, 45, 22, 74, 73, 75, 77, 79, 402, 36, 230, 235, 388, 38, 76}, new int[] {-1, 0, 0, 0, 0, 0, 0, 9, 12, 15, 15, 20, 25, 30, 37, 44, 51, 58});
        Game.game.data.addSpecies("Charmander", FEMALE_IS_RARE, FIRE, NONE, EggGroup.MONSTER, EggGroup.DRAGON, MEDIUM_SLOW,
                66, 66, 94, 94, 39, 52, 43, 60, 50, 65, 45, 50, 62, 0, 0, 0, 0, 0, 1,
                4, 16, new int[] {10, 45, 52, 108, 225, 424, 163, 53, 184, 83, 517, 394}, new int[] {0, 0, 4, 8, 12, 17, 20, 24, 28, 32, 36, 40});
        Game.game.data.addSpecies("Charmeleon", FEMALE_IS_RARE, FIRE, NONE, EggGroup.MONSTER, EggGroup.DRAGON, MEDIUM_SLOW,
                66, 66, 94, 94, 58, 64, 58, 80, 65, 80, 45, 50, 142, 0, 0, 0, 1, 0, 1,
                5, 36, new int[] {10, 45, 52, 108, 225, 424, 163, 53, 184, 83, 517, 394}, new int[] {0, 0, 0, 0, 12, 19, 24, 30, 37, 42, 48, 54});
        Game.game.data.addSpecies("Charizard", FEMALE_IS_RARE, FIRE, FLYING, EggGroup.MONSTER, EggGroup.DRAGON, MEDIUM_SLOW,
                66, 66, 94, 94, 78, 84, 78, 109, 85, 100, 45, 50, 240, 0, 0, 0, 3, 0, 0,
                -1, -1, new int[] {403, 403, 337, 257, 10, 45, 52, 108, 12, 424, 163, 53, 184, 46, 517, 394}, new int[] {-1, 0, 0, 0, 0, 0, 0, 0, 12, 19, 24, 30, 39, 46, 54, 62});
        Game.game.data.addSpecies("Squirtle", FEMALE_IS_RARE, WATER, NONE, EggGroup.MONSTER, EggGroup.WATER1, MEDIUM_SLOW,
                67, 67, 44, 44, 44, 48, 65, 50, 64, 43, 45, 50, 63, 0, 0, 1, 0, 0, 0,
                8, 16, new int[] {33, 39, 55, 110, 229, 44, 352, 182, 240, 401, 504, 334, 56, 130}, new int[] {0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36});
        Game.game.data.addSpecies("Wartortle", FEMALE_IS_RARE, WATER, NONE, EggGroup.MONSTER, EggGroup.WATER1, MEDIUM_SLOW,
                67, 67, 44, 44, 59, 63, 80, 65, 80, 58, 45, 50, 142, 0, 0, 1, 0, 1, 0,
                9, 36, new int[] {33, 39, 55, 110, 229, 44, 352, 182, 240, 401, 504, 334, 56, 130}, new int[] {0, 0, 0, 0, 9, 12, 15, 20, 25, 30, 35, 40, 45, 50});
        Game.game.data.addSpecies("Blastoise", FEMALE_IS_RARE, WATER, NONE, EggGroup.MONSTER, EggGroup.WATER1, MEDIUM_SLOW,
                67, 67, 44, 44, 79, 83, 100,85, 105, 78, 45, 50, 239, 0, 0, 0, 0, 3, 0,
                -1, -1, new int[] {430, 33, 39, 55, 110, 229, 44, 352, 182, 240, 401, 504, 334, 56, 130}, new int[] {-1, 0, 0, 0, 0, 0, 9, 12, 15, 20, 25, 30, 35, 42, 49, 56});
    }
    private void addMoves() {
        Game.game.data.addMove("Struggle", NONE, PHYSICAL, TOUGH, ADJACENT, -1, 50, -1, "protect, mirror", null);
        Game.game.data.addMove("Pound", NORMAL, PHYSICAL, TOUGH, ADJACENT, 7, 40, 100, "contact, protect, mirror", null);
        Game.game.data.addMove("Karate Chop", FIGHTING, PHYSICAL, TOUGH, ADJACENT, 5, 50, 100, "contact, protect, mirror, crit", null);
        Game.game.data.addMove("Double Slap", NORMAL, PHYSICAL, CUTE, ADJACENT, 2, 15, 85, "contact, protect, mirror, multi", null);
        Game.game.data.addMove("Comet Punch", NORMAL, PHYSICAL, TOUGH, ADJACENT, 3, 18, 85, "contact, mirror, punch, multi", null);
        Game.game.data.addMove("Mega Punch", NORMAL, PHYSICAL, TOUGH, ADJACENT, 4, 80, 85, "contact, protect, mirror, punch", null);
        Game.game.data.addMove("Pay Day", NORMAL, PHYSICAL, CLEVER, ADJACENT, 4, 40, 100, "protect, mirror", null); // todo make Pay Day add pokedollars to funds
        Game.game.data.addMove("Fire Punch", FIRE, PHYSICAL, TOUGH, ADJACENT, 3 ,75, 100, "contact, protect, mirror, punch", new Move.EffectStatusCondition(100, StatusCondition.BURN));
        Game.game.data.addMove("Ice Punch", FIRE, PHYSICAL, BEAUTIFUL, ADJACENT, 3, 75, 100, "contact, protect, mirror, punch", new Move.EffectStatusCondition(10, StatusCondition.FREEZE));
        Game.game.data.addMove("Thunder Punch", ELECTRIC, PHYSICAL, COOL, ADJACENT, 3, 75, 100, "contact, protect, mirror, punch", new Move.EffectStatusCondition(10, StatusCondition.PARALYSIS));
        Game.game.data.addMove("Scratch", NORMAL, PHYSICAL, TOUGH, ADJACENT, 7, 40, 100, "contact, protect, mirror", null);
        Game.game.data.addMove("Vise Grip", NORMAL, PHYSICAL, TOUGH, ADJACENT, 6, 55, 100, "contact, protect, mirror", null);
        Game.game.data.addMove("Guillotine", NORMAL, PHYSICAL, COOL, ADJACENT, 1, -1, 30, "contact, protect, mirror", null);
        Game.game.data.addMove("Razor Wind");
        Game.game.data.addMove("Swords Dance");
        Game.game.data.addMove("Cut");
        Game.game.data.addMove("Gust");
        Game.game.data.addMove("Wing Attack");
        Game.game.data.addMove("Whirlwind");
        Game.game.data.addMove("Fly");
        Game.game.data.addMove("Bind");
        Game.game.data.addMove("Slam");
        Game.game.data.addMove("Vine Whip", GRASS, PHYSICAL, COOL, ADJACENT, 5, 45, 100, "contact, protect, mirror", null);
        Game.game.data.addMove("Stomp");
        Game.game.data.addMove("Double Kick");
        Game.game.data.addMove("Mega Kick");
        Game.game.data.addMove("Jump Kick");
        Game.game.data.addMove("Rolling Kick");
        Game.game.data.addMove("Sand Attack");
        Game.game.data.addMove("Headbutt");
        Game.game.data.addMove("Horn Attack");
        Game.game.data.addMove("Fury Attack");
        Game.game.data.addMove("Horn Drill");
        Game.game.data.addMove("Tackle", NORMAL, PHYSICAL, TOUGH, ADJACENT, 7, 40, 100, "contact, protect, mirror", null);
        Game.game.data.addMove("Body Slam");
        Game.game.data.addMove("Wrap");
        Game.game.data.addMove("Take Down", NORMAL, PHYSICAL, TOUGH, ADJACENT, 4, 90, 85, "contact, protect, mirror", null);
        Game.game.data.addMove("Thrash");
        Game.game.data.addMove("Double-Edge", NORMAL, PHYSICAL, TOUGH, ADJACENT, 3, 120, 100, "contact, protect, mirror", null);
        Game.game.data.addMove("Tail Whip");
        Game.game.data.addMove("Poison Sting");
        Game.game.data.addMove("Twineedle");
        Game.game.data.addMove("Pin Missile");
        Game.game.data.addMove("Leer");
        Game.game.data.addMove("Bite");
        Game.game.data.addMove("Growl", NORMAL, STATUS, CUTE, ALL_ADJACENT_FOES, 8, -1, 100, "protect, reflectable, mirror, sound, authentic", null);
        Game.game.data.addMove("Roar");
        Game.game.data.addMove("Sing");
        Game.game.data.addMove("Supersonic");
        Game.game.data.addMove("Sonic Boom");
        Game.game.data.addMove("Disable");
        Game.game.data.addMove("Acid");
        Game.game.data.addMove("Ember");
        Game.game.data.addMove("Flamethrower");
        Game.game.data.addMove("Mist");
        Game.game.data.addMove("Water Gun");
        Game.game.data.addMove("Hydro Pump");
        Game.game.data.addMove("Surf");
        Game.game.data.addMove("Ice Beam");
        Game.game.data.addMove("Blizzard");
        Game.game.data.addMove("Psybeam");
        Game.game.data.addMove("Bubble Beam");
        Game.game.data.addMove("Aurora Beam");
        Game.game.data.addMove("Hyper Beam");
        Game.game.data.addMove("Peck");
        Game.game.data.addMove("Drill Peck");
        Game.game.data.addMove("Submission");
        Game.game.data.addMove("Low Kick");
        Game.game.data.addMove("Counter");
        Game.game.data.addMove("Seismic Toss", FIGHTING, PHYSICAL, TOUGH, ADJACENT, 4, -1, 100, "contact, protect, mirror, nonsky", null);
        Game.game.data.addMove("Strength");
        Game.game.data.addMove("Absorb");
        Game.game.data.addMove("Mega Drain");
        Game.game.data.addMove("Leech Seed", GRASS, STATUS, CLEVER, ADJACENT, 2, -1, 90, "protect, reflectable, mirror", null);
        Game.game.data.addMove("Growth", NORMAL, STATUS, BEAUTIFUL, SELF, 4, -1, -1, "snatch", null);
        Game.game.data.addMove("Razor Leaf", GRASS, PHYSICAL, COOL, ALL_ADJACENT_FOES, 5, 55, 95, "protect, mirror, crit", null);
        Game.game.data.addMove("Solar Beam", GRASS, SPECIAL, COOL, ADJACENT, 2, 120, 100, "charge, protect, mirror", null);
        Game.game.data.addMove("Poison Powder", POISON, STATUS, CLEVER, ADJACENT, 7, -1, 75, "protect, reflectable, mirror, powder", null);
        Game.game.data.addMove("Stun Spore", GRASS, STATUS, CLEVER, ADJACENT, 6, -1, 75, "protect, reflectable, mirror, powder", null);
        Game.game.data.addMove("Sleep Powder", GRASS, STATUS, CLEVER, ADJACENT, 3, -1, 75, "protect, reflectable, mirror, powder", null);
        Game.game.data.addMove("Petal Dance");
        Game.game.data.addMove("String Shot");
        Game.game.data.addMove("Dragon Rage");
        Game.game.data.addMove("Fire Spin");
        Game.game.data.addMove("Thunder Shock");
        Game.game.data.addMove("Thunderbolt");
        Game.game.data.addMove("Thunder Wave");
        Game.game.data.addMove("Thunder");
        Game.game.data.addMove("Rock Throw");
        Game.game.data.addMove("Earthquake");
        Game.game.data.addMove("Fissure");
        Game.game.data.addMove("Dig");
        Game.game.data.addMove("Toxic");
        Game.game.data.addMove("Confusion");
        Game.game.data.addMove("Psychic");
        Game.game.data.addMove("Hypnosis");
        Game.game.data.addMove("Meditate");
        Game.game.data.addMove("Agility");
        Game.game.data.addMove("Quick Attack");
        Game.game.data.addMove("Rage");
        Game.game.data.addMove("Teleport");
        Game.game.data.addMove("Night Shade", GHOST, SPECIAL, CLEVER, ADJACENT, 3, -1, 100, "protect, mirror", null);
        Game.game.data.addMove("Mimic");
        Game.game.data.addMove("Screech");
        Game.game.data.addMove("Double Team");
        Game.game.data.addMove("Recover");
        Game.game.data.addMove("Harden");
        Game.game.data.addMove("Minimize");
        Game.game.data.addMove("Smokescreen");
        Game.game.data.addMove("Confuse Ray");
        Game.game.data.addMove("Withdraw");
        Game.game.data.addMove("Defense Curl");
        Game.game.data.addMove("Barrier");
        Game.game.data.addMove("Light Screen");
        Game.game.data.addMove("Haze");
        Game.game.data.addMove("Reflect");
        Game.game.data.addMove("Focus Energy");
        Game.game.data.addMove("Bide");
        Game.game.data.addMove("Metronome");
        Game.game.data.addMove("Mirror Move");
        Game.game.data.addMove("Self-Destruct");
        Game.game.data.addMove("Egg Bomb");
        Game.game.data.addMove("Lick");
        Game.game.data.addMove("Smog");
        Game.game.data.addMove("Sludge");
        Game.game.data.addMove("Bone Club");
        Game.game.data.addMove("Fire Blast");
        Game.game.data.addMove("Waterfall");
        Game.game.data.addMove("Clamp");
        Game.game.data.addMove("Swift");
        Game.game.data.addMove("Skull Bash");
        Game.game.data.addMove("Spike Cannon");
        Game.game.data.addMove("Constrict");
        Game.game.data.addMove("Amnesia");
        Game.game.data.addMove("Kinesis");
        Game.game.data.addMove("Soft-Boiled");
        Game.game.data.addMove("High Jump Kick");
        Game.game.data.addMove("Glare");
        Game.game.data.addMove("Dream Eater");
        Game.game.data.addMove("Poison Gas");
        Game.game.data.addMove("Barrage");
        Game.game.data.addMove("Leech Life");
        Game.game.data.addMove("Lovely Kiss");
        Game.game.data.addMove("Sky Attack");
        Game.game.data.addMove("Transform");
        Game.game.data.addMove("Bubble");
        Game.game.data.addMove("Dizzy Punch");
        Game.game.data.addMove("Spore");
        Game.game.data.addMove("Flash");
        Game.game.data.addMove("Psywave");
        Game.game.data.addMove("Splash");
        Game.game.data.addMove("Acid Armor");
        Game.game.data.addMove("Crabhammer");
        Game.game.data.addMove("Explosion");
        Game.game.data.addMove("Fury Swipes");
        Game.game.data.addMove("Bonemerang");
        Game.game.data.addMove("Rest");
        Game.game.data.addMove("Rock Slide");
        Game.game.data.addMove("Hyper Fang");
        Game.game.data.addMove("Sharpen");
        Game.game.data.addMove("Conversion");
        Game.game.data.addMove("Tri Attack");
        Game.game.data.addMove("Super Fang");
        Game.game.data.addMove("Slash");
        Game.game.data.addMove("Substitute");
        Game.game.data.addMove("Struggle");
        Game.game.data.addMove("Sketch");
        Game.game.data.addMove("Triple Kick");
        Game.game.data.addMove("Thief");
        Game.game.data.addMove("Spider Web");
        Game.game.data.addMove("Mind Reader");
        Game.game.data.addMove("Nightmare");
        Game.game.data.addMove("Flame Wheel");
        Game.game.data.addMove("Snore");
        Game.game.data.addMove("Curse*");
        Game.game.data.addMove("Flail");
        Game.game.data.addMove("Conversion 2");
        Game.game.data.addMove("Aeroblast");
        Game.game.data.addMove("Cotton Spore");
        Game.game.data.addMove("Reversal");
        Game.game.data.addMove("Spite");
        Game.game.data.addMove("Powder Snow");
        Game.game.data.addMove("Protect");
        Game.game.data.addMove("Mach Punch");
        Game.game.data.addMove("Scary Face");
        Game.game.data.addMove("Feint Attack");
        Game.game.data.addMove("Sweet Kiss*");
        Game.game.data.addMove("Belly Drum");
        Game.game.data.addMove("Sludge Bomb");
        Game.game.data.addMove("Mud-Slap");
        Game.game.data.addMove("Octazooka");
        Game.game.data.addMove("Spikes");
        Game.game.data.addMove("Zap Cannon");
        Game.game.data.addMove("Foresight");
        Game.game.data.addMove("Destiny Bond");
        Game.game.data.addMove("Perish Song");
        Game.game.data.addMove("Icy Wind");
        Game.game.data.addMove("Detect");
        Game.game.data.addMove("Bone Rush");
        Game.game.data.addMove("Lock-On");
        Game.game.data.addMove("Outrage");
        Game.game.data.addMove("Sandstorm");
        Game.game.data.addMove("Giga Drain");
        Game.game.data.addMove("Endure");
        Game.game.data.addMove("Charm*");
        Game.game.data.addMove("Rollout");
        Game.game.data.addMove("False Swipe");
        Game.game.data.addMove("Swagger");
        Game.game.data.addMove("Milk Drink");
        Game.game.data.addMove("Spark");
        Game.game.data.addMove("Fury Cutter");
        Game.game.data.addMove("Steel Wing");
        Game.game.data.addMove("Mean Look");
        Game.game.data.addMove("Attract");
        Game.game.data.addMove("Sleep Talk");
        Game.game.data.addMove("Heal Bell");
        Game.game.data.addMove("Return");
        Game.game.data.addMove("Present");
        Game.game.data.addMove("Frustration");
        Game.game.data.addMove("Safeguard");
        Game.game.data.addMove("Pain Split");
        Game.game.data.addMove("Sacred Fire");
        Game.game.data.addMove("Magnitude");
        Game.game.data.addMove("Dynamic Punch");
        Game.game.data.addMove("Megahorn");
        Game.game.data.addMove("Dragon Breath");
        Game.game.data.addMove("Baton Pass");
        Game.game.data.addMove("Encore");
        Game.game.data.addMove("Pursuit");
        Game.game.data.addMove("Rapid Spin");
        Game.game.data.addMove("Sweet Scent", NORMAL, STATUS, CUTE, ALL_ADJACENT_FOES, 4, -1, 100, "protect, reflectable, mirror", null);
        Game.game.data.addMove("Iron Tail");
        Game.game.data.addMove("Metal Claw");
        Game.game.data.addMove("Vital Throw");
        Game.game.data.addMove("Morning Sun");
        Game.game.data.addMove("Synthesis", GRASS, STATUS, CLEVER, SELF, 1, -1, -1, "snatch, heal", null);
        Game.game.data.addMove("Moonlight*");
        Game.game.data.addMove("Hidden Power");
        Game.game.data.addMove("Cross Chop");
        Game.game.data.addMove("Twister");
        Game.game.data.addMove("Rain Dance");
        Game.game.data.addMove("Sunny Day");
        Game.game.data.addMove("Crunch");
        Game.game.data.addMove("Mirror Coat");
        Game.game.data.addMove("Psych Up");
        Game.game.data.addMove("Extreme Speed");
        Game.game.data.addMove("Ancient Power");
        Game.game.data.addMove("Shadow Ball");
        Game.game.data.addMove("Future Sight");
        Game.game.data.addMove("Rock Smash");
        Game.game.data.addMove("Whirlpool");
        Game.game.data.addMove("Beat Up");
        Game.game.data.addMove("Fake Out");
        Game.game.data.addMove("Uproar");
        Game.game.data.addMove("Stockpile");
        Game.game.data.addMove("Spit Up");
        Game.game.data.addMove("Swallow");
        Game.game.data.addMove("Heat Wave");
        Game.game.data.addMove("Hail");
        Game.game.data.addMove("Torment");
        Game.game.data.addMove("Flatter");
        Game.game.data.addMove("Will-O-Wisp");
        Game.game.data.addMove("Memento");
        Game.game.data.addMove("Facade");
        Game.game.data.addMove("Focus Punch");
        Game.game.data.addMove("Smelling Salts");
        Game.game.data.addMove("Follow Me");
        Game.game.data.addMove("Nature Power");
        Game.game.data.addMove("Charge");
        Game.game.data.addMove("Taunt");
        Game.game.data.addMove("Helping Hand");
        Game.game.data.addMove("Trick");
        Game.game.data.addMove("Role Play");
        Game.game.data.addMove("Wish");
        Game.game.data.addMove("Assist");
        Game.game.data.addMove("Ingrain");
        Game.game.data.addMove("Superpower");
        Game.game.data.addMove("Magic Coat");
        Game.game.data.addMove("Recycle");
        Game.game.data.addMove("Revenge");
        Game.game.data.addMove("Brick Break");
        Game.game.data.addMove("Yawn");
        Game.game.data.addMove("Knock Off");
        Game.game.data.addMove("Endeavor");
        Game.game.data.addMove("Eruption");
        Game.game.data.addMove("Skill Swap");
        Game.game.data.addMove("Imprison");
        Game.game.data.addMove("Refresh");
        Game.game.data.addMove("Grudge");
        Game.game.data.addMove("Snatch");
        Game.game.data.addMove("Secret Power");
        Game.game.data.addMove("Dive");
        Game.game.data.addMove("Arm Thrust");
        Game.game.data.addMove("Camouflage");
        Game.game.data.addMove("Tail Glow");
        Game.game.data.addMove("Luster Purge");
        Game.game.data.addMove("Mist Ball");
        Game.game.data.addMove("Feather Dance");
        Game.game.data.addMove("Teeter Dance");
        Game.game.data.addMove("Blaze Kick");
        Game.game.data.addMove("Mud Sport");
        Game.game.data.addMove("Ice Ball");
        Game.game.data.addMove("Needle Arm");
        Game.game.data.addMove("Slack Off");
        Game.game.data.addMove("Hyper Voice");
        Game.game.data.addMove("Poison Fang");
        Game.game.data.addMove("Crush Claw");
        Game.game.data.addMove("Blast Burn");
        Game.game.data.addMove("Hydro Cannon");
        Game.game.data.addMove("Meteor Mash");
        Game.game.data.addMove("Astonish");
        Game.game.data.addMove("Weather Ball");
        Game.game.data.addMove("Aromatherapy");
        Game.game.data.addMove("Fake Tears");
        Game.game.data.addMove("Air Cutter");
        Game.game.data.addMove("Overheat");
        Game.game.data.addMove("Odor Sleuth");
        Game.game.data.addMove("Rock Tomb");
        Game.game.data.addMove("Silver Wind");
        Game.game.data.addMove("Metal Sound");
        Game.game.data.addMove("Grass Whistle");
        Game.game.data.addMove("Tickle");
        Game.game.data.addMove("Cosmic Power");
        Game.game.data.addMove("Water Spout");
        Game.game.data.addMove("Signal Beam");
        Game.game.data.addMove("Shadow Punch");
        Game.game.data.addMove("Extrasensory");
        Game.game.data.addMove("Sky Uppercut");
        Game.game.data.addMove("Sand Tomb");
        Game.game.data.addMove("Sheer Cold");
        Game.game.data.addMove("Muddy Water");
        Game.game.data.addMove("Bullet Seed");
        Game.game.data.addMove("Aerial Ace");
        Game.game.data.addMove("Icicle Spear");
        Game.game.data.addMove("Iron Defense");
        Game.game.data.addMove("Block");
        Game.game.data.addMove("Howl");
        Game.game.data.addMove("Dragon Claw");
        Game.game.data.addMove("Frenzy Plant");
        Game.game.data.addMove("Bulk Up");
        Game.game.data.addMove("Bounce");
        Game.game.data.addMove("Mud Shot");
        Game.game.data.addMove("Poison Tail");
        Game.game.data.addMove("Covet");
        Game.game.data.addMove("Volt Tackle");
        Game.game.data.addMove("Magical Leaf");
        Game.game.data.addMove("Water Sport");
        Game.game.data.addMove("Calm Mind");
        Game.game.data.addMove("Leaf Blade");
        Game.game.data.addMove("Dragon Dance");
        Game.game.data.addMove("Rock Blast");
        Game.game.data.addMove("Shock Wave");
        Game.game.data.addMove("Water Pulse");
        Game.game.data.addMove("Doom Desire");
        Game.game.data.addMove("Psycho Boost");
        Game.game.data.addMove("Roost");
        Game.game.data.addMove("Gravity");
        Game.game.data.addMove("Miracle Eye");
        Game.game.data.addMove("Wake-Up Slap");
        Game.game.data.addMove("Hammer Arm");
        Game.game.data.addMove("Gyro Ball");
        Game.game.data.addMove("Healing Wish");
        Game.game.data.addMove("Brine");
        Game.game.data.addMove("Natural Gift");
        Game.game.data.addMove("Feint");
        Game.game.data.addMove("Pluck");
        Game.game.data.addMove("Tailwind");
        Game.game.data.addMove("Acupressure");
        Game.game.data.addMove("Metal Burst");
        Game.game.data.addMove("U-turn");
        Game.game.data.addMove("Close Combat");
        Game.game.data.addMove("Payback");
        Game.game.data.addMove("Assurance");
        Game.game.data.addMove("Embargo");
        Game.game.data.addMove("Fling");
        Game.game.data.addMove("Psycho Shift");
        Game.game.data.addMove("Trump Card");
        Game.game.data.addMove("Heal Block");
        Game.game.data.addMove("Wring Out");
        Game.game.data.addMove("Power Trick");
        Game.game.data.addMove("Gastro Acid");
        Game.game.data.addMove("Lucky Chant");
        Game.game.data.addMove("Me First");
        Game.game.data.addMove("Copycat");
        Game.game.data.addMove("Power Swap");
        Game.game.data.addMove("Guard Swap");
        Game.game.data.addMove("Punishment");
        Game.game.data.addMove("Last Resort");
        Game.game.data.addMove("Worry Seed");
        Game.game.data.addMove("Sucker Punch");
        Game.game.data.addMove("Toxic Spikes");
        Game.game.data.addMove("Heart Swap");
        Game.game.data.addMove("Aqua Ring");
        Game.game.data.addMove("Magnet Rise");
        Game.game.data.addMove("Flare Blitz");
        Game.game.data.addMove("Force Palm");
        Game.game.data.addMove("Aura Sphere");
        Game.game.data.addMove("Rock Polish");
        Game.game.data.addMove("Poison Jab");
        Game.game.data.addMove("Dark Pulse");
        Game.game.data.addMove("Night Slash");
        Game.game.data.addMove("Aqua Tail");
        Game.game.data.addMove("Seed Bomb", GRASS, PHYSICAL, TOUGH, ADJACENT, 3, 80, 100, "protect, mirror, bullet", null);
        Game.game.data.addMove("Air Slash");
        Game.game.data.addMove("X-Scissor");
        Game.game.data.addMove("Bug Buzz");
        Game.game.data.addMove("Dragon Pulse");
        Game.game.data.addMove("Dragon Rush");
        Game.game.data.addMove("Power Gem");
        Game.game.data.addMove("Drain Punch");
        Game.game.data.addMove("Vacuum Wave");
        Game.game.data.addMove("Focus Blast");
        Game.game.data.addMove("Energy Ball");
        Game.game.data.addMove("Brave Bird");
        Game.game.data.addMove("Earth Power");
        Game.game.data.addMove("Switcheroo");
        Game.game.data.addMove("Giga Impact");
        Game.game.data.addMove("Nasty Plot");
        Game.game.data.addMove("Bullet Punch");
        Game.game.data.addMove("Avalanche");
        Game.game.data.addMove("Ice Shard");
        Game.game.data.addMove("Shadow Claw");
        Game.game.data.addMove("Thunder Fang");
        Game.game.data.addMove("Ice Fang");
        Game.game.data.addMove("Fire Fang");
        Game.game.data.addMove("Shadow Sneak");
        Game.game.data.addMove("Mud Bomb");
        Game.game.data.addMove("Psycho Cut");
        Game.game.data.addMove("Zen Headbutt");
        Game.game.data.addMove("Mirror Shot");
        Game.game.data.addMove("Flash Cannon");
        Game.game.data.addMove("Rock Climb");
        Game.game.data.addMove("Defog");
        Game.game.data.addMove("Trick Room");
        Game.game.data.addMove("Draco Meteor");
        Game.game.data.addMove("Discharge");
        Game.game.data.addMove("Lava Plume");
        Game.game.data.addMove("Leaf Storm");
        Game.game.data.addMove("Power Whip");
        Game.game.data.addMove("Rock Wrecker");
        Game.game.data.addMove("Cross Poison");
        Game.game.data.addMove("Gunk Shot");
        Game.game.data.addMove("Iron Head");
        Game.game.data.addMove("Magnet Bomb");
        Game.game.data.addMove("Stone Edge");
        Game.game.data.addMove("Captivate");
        Game.game.data.addMove("Stealth Rock");
        Game.game.data.addMove("Grass Knot");
        Game.game.data.addMove("Chatter");
        Game.game.data.addMove("Judgment");
        Game.game.data.addMove("Bug Bite");
        Game.game.data.addMove("Charge Beam");
        Game.game.data.addMove("Wood Hammer");
        Game.game.data.addMove("Aqua Jet");
        Game.game.data.addMove("Attack Order");
        Game.game.data.addMove("Defend Order");
        Game.game.data.addMove("Heal Order");
        Game.game.data.addMove("Head Smash");
        Game.game.data.addMove("Double Hit");
        Game.game.data.addMove("Roar of Time");
        Game.game.data.addMove("Spacial Rend");
        Game.game.data.addMove("Lunar Dance");
        Game.game.data.addMove("Crush Grip");
        Game.game.data.addMove("Magma Storm");
        Game.game.data.addMove("Dark Void");
        Game.game.data.addMove("Seed Flare");
        Game.game.data.addMove("Ominous Wind");
        Game.game.data.addMove("Shadow Force");
        Game.game.data.addMove("Hone Claws");
        Game.game.data.addMove("Wide Guard");
        Game.game.data.addMove("Guard Split");
        Game.game.data.addMove("Power Split");
        Game.game.data.addMove("Wonder Room");
        Game.game.data.addMove("Psyshock");
        Game.game.data.addMove("Venoshock");
        Game.game.data.addMove("Autotomize");
        Game.game.data.addMove("Rage Powder");
        Game.game.data.addMove("Telekinesis");
        Game.game.data.addMove("Magic Room");
        Game.game.data.addMove("Smack Down");
        Game.game.data.addMove("Storm Throw");
        Game.game.data.addMove("Flame Burst");
        Game.game.data.addMove("Sludge Wave");
        Game.game.data.addMove("Quiver Dance");
        Game.game.data.addMove("Heavy Slam");
        Game.game.data.addMove("Synchronoise");
        Game.game.data.addMove("Electro Ball");
        Game.game.data.addMove("Soak");
        Game.game.data.addMove("Flame Charge");
        Game.game.data.addMove("Coil");
        Game.game.data.addMove("Low Sweep");
        Game.game.data.addMove("Acid Spray");
        Game.game.data.addMove("Foul Play");
        Game.game.data.addMove("Simple Beam");
        Game.game.data.addMove("Entrainment");
        Game.game.data.addMove("After You");
        Game.game.data.addMove("Round");
        Game.game.data.addMove("Echoed Voice");
        Game.game.data.addMove("Chip Away");
        Game.game.data.addMove("Clear Smog");
        Game.game.data.addMove("Stored Power");
        Game.game.data.addMove("Quick Guard");
        Game.game.data.addMove("Ally Switch");
        Game.game.data.addMove("Scald");
        Game.game.data.addMove("Shell Smash");
        Game.game.data.addMove("Heal Pulse");
        Game.game.data.addMove("Hex");
        Game.game.data.addMove("Sky Drop");
        Game.game.data.addMove("Shift Gear");
        Game.game.data.addMove("Circle Throw");
        Game.game.data.addMove("Incinerate");
        Game.game.data.addMove("Quash");
        Game.game.data.addMove("Acrobatics");
        Game.game.data.addMove("Reflect Type");
        Game.game.data.addMove("Retaliate");
        Game.game.data.addMove("Final Gambit");
        Game.game.data.addMove("Bestow");
        Game.game.data.addMove("Inferno");
        Game.game.data.addMove("Water Pledge");
        Game.game.data.addMove("Fire Pledge");
        Game.game.data.addMove("Grass Pledge");
        Game.game.data.addMove("Volt Switch");
        Game.game.data.addMove("Struggle Bug");
        Game.game.data.addMove("Bulldoze");
        Game.game.data.addMove("Frost Breath");
        Game.game.data.addMove("Dragon Tail");
        Game.game.data.addMove("Work Up");
        Game.game.data.addMove("Electroweb");
        Game.game.data.addMove("Wild Charge");
        Game.game.data.addMove("Drill Run");
        Game.game.data.addMove("Dual Chop");
        Game.game.data.addMove("Heart Stamp");
        Game.game.data.addMove("Horn Leech");
        Game.game.data.addMove("Sacred Sword");
        Game.game.data.addMove("Razor Shell");
        Game.game.data.addMove("Heat Crash");
        Game.game.data.addMove("Leaf Tornado");
        Game.game.data.addMove("Steamroller");
        Game.game.data.addMove("Cotton Guard");
        Game.game.data.addMove("Night Daze");
        Game.game.data.addMove("Psystrike");
        Game.game.data.addMove("Tail Slap");
        Game.game.data.addMove("Hurricane");
        Game.game.data.addMove("Head Charge");
        Game.game.data.addMove("Gear Grind");
        Game.game.data.addMove("Searing Shot");
        Game.game.data.addMove("Techno Blast");
        Game.game.data.addMove("Relic Song");
        Game.game.data.addMove("Secret Sword");
        Game.game.data.addMove("Glaciate");
        Game.game.data.addMove("Bolt Strike");
        Game.game.data.addMove("Blue Flare");
        Game.game.data.addMove("Fiery Dance");
        Game.game.data.addMove("Freeze Shock");
        Game.game.data.addMove("Ice Burn");
        Game.game.data.addMove("Snarl");
        Game.game.data.addMove("Icicle Crash");
        Game.game.data.addMove("V-create");
        Game.game.data.addMove("Fusion Flare");
        Game.game.data.addMove("Fusion Bolt");
        Game.game.data.addMove("Flying Press");
        Game.game.data.addMove("Mat Block");
        Game.game.data.addMove("Belch");
        Game.game.data.addMove("Rototiller");
        Game.game.data.addMove("Sticky Web");
        Game.game.data.addMove("Fell Stinger");
        Game.game.data.addMove("Phantom Force");
        Game.game.data.addMove("Trick-or-Treat");
        Game.game.data.addMove("Noble Roar");
        Game.game.data.addMove("Ion Deluge");
        Game.game.data.addMove("Parabolic Charge");
        Game.game.data.addMove("Forest's Curse");
        Game.game.data.addMove("Petal Blizzard");
        Game.game.data.addMove("Freeze-Dry");
        Game.game.data.addMove("Disarming Voice");
        Game.game.data.addMove("Parting Shot");
        Game.game.data.addMove("Topsy-Turvy");
        Game.game.data.addMove("Draining Kiss");
        Game.game.data.addMove("Crafty Shield");
        Game.game.data.addMove("Flower Shield");
        Game.game.data.addMove("Grassy Terrain");
        Game.game.data.addMove("Misty Terrain");
        Game.game.data.addMove("Electrify");
        Game.game.data.addMove("Play Rough");
        Game.game.data.addMove("Fairy Wind");
        Game.game.data.addMove("Moonblast");
        Game.game.data.addMove("Boomburst");
        Game.game.data.addMove("Fairy Lock");
        Game.game.data.addMove("King's Shield");
        Game.game.data.addMove("Play Nice");
        Game.game.data.addMove("Confide");
        Game.game.data.addMove("Diamond Storm");
        Game.game.data.addMove("Steam Eruption");
        Game.game.data.addMove("Hyperspace Hole");
        Game.game.data.addMove("Water Shuriken*");
        Game.game.data.addMove("Mystical Fire");
        Game.game.data.addMove("Spiky Shield");
        Game.game.data.addMove("Aromatic Mist");
        Game.game.data.addMove("Eerie Impulse");
        Game.game.data.addMove("Venom Drench");
        Game.game.data.addMove("Powder");
        Game.game.data.addMove("Geomancy");
        Game.game.data.addMove("Magnetic Flux");
        Game.game.data.addMove("Happy Hour");
        Game.game.data.addMove("Electric Terrain");
        Game.game.data.addMove("Dazzling Gleam");
        Game.game.data.addMove("Celebrate");
        Game.game.data.addMove("Hold Hands");
        Game.game.data.addMove("Baby-Doll Eyes");
        Game.game.data.addMove("Nuzzle");
        Game.game.data.addMove("Hold Back");
        Game.game.data.addMove("Infestation");
        Game.game.data.addMove("Power-Up Punch");
        Game.game.data.addMove("Oblivion Wing");
        Game.game.data.addMove("Thousand Arrows");
        Game.game.data.addMove("Thousand Waves");
        Game.game.data.addMove("Land's Wrath");
        Game.game.data.addMove("Light of Ruin");
        Game.game.data.addMove("Origin Pulse");
        Game.game.data.addMove("Precipice Blades");
        Game.game.data.addMove("Dragon Ascent");
        Game.game.data.addMove("Hyperspace Fury");
        Game.game.data.addMove("Breakneck Blitz");
        Game.game.data.addMove("Breakneck Blitz");
        Game.game.data.addMove("All-Out Pummeling");
        Game.game.data.addMove("All-Out Pummeling");
        Game.game.data.addMove("Supersonic Skystrike");
        Game.game.data.addMove("Supersonic Skystrike");
        Game.game.data.addMove("Acid Downpour");
        Game.game.data.addMove("Acid Downpour");
        Game.game.data.addMove("Tectonic Rage");
        Game.game.data.addMove("Tectonic Rage");
        Game.game.data.addMove("Continental Crush");
        Game.game.data.addMove("Continental Crush");
        Game.game.data.addMove("Savage Spin-Out");
        Game.game.data.addMove("Savage Spin-Out");
        Game.game.data.addMove("Never-Ending Nightmare");
        Game.game.data.addMove("Never-Ending Nightmare");
        Game.game.data.addMove("Corkscrew Crash");
        Game.game.data.addMove("Corkscrew Crash");
        Game.game.data.addMove("Inferno Overdrive");
        Game.game.data.addMove("Inferno Overdrive");
        Game.game.data.addMove("Hydro Vortex");
        Game.game.data.addMove("Hydro Vortex");
        Game.game.data.addMove("Bloom Doom");
        Game.game.data.addMove("Bloom Doom");
        Game.game.data.addMove("Gigavolt Havoc");
        Game.game.data.addMove("Gigavolt Havoc");
        Game.game.data.addMove("Shattered Psyche");
        Game.game.data.addMove("Shattered Psyche");
        Game.game.data.addMove("Subzero Slammer");
        Game.game.data.addMove("Subzero Slammer");
        Game.game.data.addMove("Devastating Drake");
        Game.game.data.addMove("Devastating Drake");
        Game.game.data.addMove("Black Hole Eclipse");
        Game.game.data.addMove("Black Hole Eclipse");
        Game.game.data.addMove("Twinkle Tackle");
        Game.game.data.addMove("Twinkle Tackle");
        Game.game.data.addMove("Catastropika");
        Game.game.data.addMove("Shore Up");
        Game.game.data.addMove("First Impression");
        Game.game.data.addMove("Baneful Bunker");
        Game.game.data.addMove("Spirit Shackle");
        Game.game.data.addMove("Darkest Lariat");
        Game.game.data.addMove("Sparkling Aria");
        Game.game.data.addMove("Ice Hammer");
        Game.game.data.addMove("Floral Healing");
        Game.game.data.addMove("High Horsepower");
        Game.game.data.addMove("Strength Sap");
        Game.game.data.addMove("Solar Blade");
        Game.game.data.addMove("Leafage");
        Game.game.data.addMove("Spotlight");
        Game.game.data.addMove("Toxic Thread");
        Game.game.data.addMove("Laser Focus");
        Game.game.data.addMove("Gear Up");
        Game.game.data.addMove("Throat Chop");
        Game.game.data.addMove("Pollen Puff");
        Game.game.data.addMove("Anchor Shot");
        Game.game.data.addMove("Psychic Terrain");
        Game.game.data.addMove("Lunge");
        Game.game.data.addMove("Fire Lash");
        Game.game.data.addMove("Power Trip");
        Game.game.data.addMove("Burn Up");
        Game.game.data.addMove("Speed Swap");
        Game.game.data.addMove("Smart Strike");
        Game.game.data.addMove("Purify");
        Game.game.data.addMove("Revelation Dance");
        Game.game.data.addMove("Core Enforcer");
        Game.game.data.addMove("Trop Kick");
        Game.game.data.addMove("Instruct");
        Game.game.data.addMove("Beak Blast");
        Game.game.data.addMove("Clanging Scales");
        Game.game.data.addMove("Dragon Hammer");
        Game.game.data.addMove("Brutal Swing");
        Game.game.data.addMove("Aurora Veil");
        Game.game.data.addMove("Sinister Arrow Raid");
        Game.game.data.addMove("Malicious Moonsault");
        Game.game.data.addMove("Oceanic Operetta");
        Game.game.data.addMove("Guardian of Alola");
        Game.game.data.addMove("Soul-Stealing 7-Star Strike");
        Game.game.data.addMove("Stoked Sparksurfer");
        Game.game.data.addMove("Pulverizing Pancake");
        Game.game.data.addMove("Extreme Evoboost");
        Game.game.data.addMove("Genesis Supernova");
        Game.game.data.addMove("Shell Trap");
        Game.game.data.addMove("Fleur Cannon");
        Game.game.data.addMove("Psychic Fangs");
        Game.game.data.addMove("Stomping Tantrum");
        Game.game.data.addMove("Shadow Bone");
        Game.game.data.addMove("Accelerock");
        Game.game.data.addMove("Liquidation");
        Game.game.data.addMove("Prismatic Laser");
        Game.game.data.addMove("Spectral Thief");
        Game.game.data.addMove("Sunsteel Strike");
        Game.game.data.addMove("Moongeist Beam");
        Game.game.data.addMove("Tearful Look");
        Game.game.data.addMove("Zing Zap");
        Game.game.data.addMove("Nature's Madness");
        Game.game.data.addMove("Multi-Attack");
        Game.game.data.addMove("10,000,000 Volt Thunderbolt");
        Game.game.data.addMove("Mind Blown");
        Game.game.data.addMove("Plasma Fists");
        Game.game.data.addMove("Photon Geyser");
        Game.game.data.addMove("Light That Burns the Sky");
        Game.game.data.addMove("Searing Sunraze Smash");
        Game.game.data.addMove("Menacing Moonraze Maelstrom");
        Game.game.data.addMove("Let's Snuggle Forever");
        Game.game.data.addMove("Splintered Stormshards");
        Game.game.data.addMove("Clangorous Soulblaze");
        Game.game.data.addMove("Zippy Zap");
        Game.game.data.addMove("Splishy Splash");
        Game.game.data.addMove("Floaty Fall");
        Game.game.data.addMove("Pika Papow");
        Game.game.data.addMove("Bouncy Bubble");
        Game.game.data.addMove("Buzzy Buzz");
        Game.game.data.addMove("Sizzly Slide");
        Game.game.data.addMove("Glitzy Glow");
        Game.game.data.addMove("Baddy Bad");
        Game.game.data.addMove("Sappy Seed");
        Game.game.data.addMove("Freezy Frost");
        Game.game.data.addMove("Sparkly Swirl");
        Game.game.data.addMove("Veevee Volley");
        Game.game.data.addMove("Double Iron Bash");
        Game.game.data.addMove("Max Guard");
        Game.game.data.addMove("Dynamax Cannon");
        Game.game.data.addMove("Snipe Shot");
        Game.game.data.addMove("Jaw Lock");
        Game.game.data.addMove("Stuff Cheeks");
        Game.game.data.addMove("No Retreat");
        Game.game.data.addMove("Tar Shot");
        Game.game.data.addMove("Magic Powder");
        Game.game.data.addMove("Dragon Darts");
        Game.game.data.addMove("Teatime");
        Game.game.data.addMove("Octolock");
        Game.game.data.addMove("Bolt Beak");
        Game.game.data.addMove("Fishious Rend");
        Game.game.data.addMove("Court Change");
        Game.game.data.addMove("Max Flare");
        Game.game.data.addMove("Max Flutterby");
        Game.game.data.addMove("Max Lightning");
        Game.game.data.addMove("Max Strike");
        Game.game.data.addMove("Max Knuckle");
        Game.game.data.addMove("Max Phantasm");
        Game.game.data.addMove("Max Hailstorm");
        Game.game.data.addMove("Max Ooze");
        Game.game.data.addMove("Max Geyser");
        Game.game.data.addMove("Max Airstream");
        Game.game.data.addMove("Max Starfall");
        Game.game.data.addMove("Max Wyrmwind");
        Game.game.data.addMove("Max Mindstorm");
        Game.game.data.addMove("Max Rockfall");
        Game.game.data.addMove("Max Quake");
        Game.game.data.addMove("Max Darkness");
        Game.game.data.addMove("Max Overgrowth");
        Game.game.data.addMove("Max Steelspike");
        Game.game.data.addMove("Clangorous Soul");
        Game.game.data.addMove("Body Press");
        Game.game.data.addMove("Decorate");
        Game.game.data.addMove("Drum Beating");
        Game.game.data.addMove("Snap Trap");
        Game.game.data.addMove("Pyro Ball");
        Game.game.data.addMove("Behemoth Blade");
        Game.game.data.addMove("Behemoth Bash");
        Game.game.data.addMove("Aura Wheel");
        Game.game.data.addMove("Breaking Swipe");
        Game.game.data.addMove("Branch Poke");
        Game.game.data.addMove("Overdrive");
        Game.game.data.addMove("Apple Acid");
        Game.game.data.addMove("Grav Apple");
        Game.game.data.addMove("Spirit Break");
        Game.game.data.addMove("Strange Steam");
        Game.game.data.addMove("Life Dew");
        Game.game.data.addMove("Obstruct");
        Game.game.data.addMove("False Surrender");
        Game.game.data.addMove("Meteor Assault");
        Game.game.data.addMove("Eternabeam");
        Game.game.data.addMove("Steel Beam");
    }
    private void addAbilities() {
        Game.game.data.addAbility(new Ability(1, "Stench", "By releasing stench when attacking, this Pokémon may cause the target to flinch."));
        Game.game.data.addAbility(new Ability(2, "Drizzle", "The Pokémon makes it rain when it enters a battle."));
        Game.game.data.addAbility(new Ability(3, "Speed Boost", "Its Speed stat is boosted every turn."));
        Game.game.data.addAbility(new Ability(4, "Battle Armor", "Hard armor protects the Pokémon from critical hits."));
        Game.game.data.addAbility(new Ability(5, "Sturdy", "It cannot be knocked out with one hit. One-hit KO moves cannot knock it out, either."));
        Game.game.data.addAbility(new Ability(6, "Damp", "Prevents the use of explosive moves, such as Self-Destruct, by dampening its surroundings."));
        Game.game.data.addAbility(new Ability(7, "Limber", "Its limber body protects the Pokémon from paralysis."));
        Game.game.data.addAbility(new Ability(8, "Sand Veil", "Boosts the Pokémon's evasiveness in a sandstorm."));
        Game.game.data.addAbility(new Ability(9, "Static", "The Pokémon is charged with static electricity, so contact with it may cause paralysis."));
        Game.game.data.addAbility(new Ability(10, "Volt Absorb", "Restores HP if hit by an Electric-type move instead of taking damage."));
        Game.game.data.addAbility(new Ability(11, "Water Absorb", "Restores HP if hit by a Water-type move instead of taking damage."));
        Game.game.data.addAbility(new Ability(12, "Oblivious", "The Pokémon is oblivious, and that keeps it from being infatuated or falling for taunts."));
        Game.game.data.addAbility(new Ability(13, "Cloud Nine", "Eliminates the effects of weather."));
        Game.game.data.addAbility(new Ability(14, "Compound Eyes", "The Pokémon's compound eyes boost its accuracy."));
        Game.game.data.addAbility(new Ability(15, "Insomnia", "The Pokémon is suffering from insomnia and cannot fall asleep."));
        Game.game.data.addAbility(new Ability(16, "Color Change", "The Pokémon's type becomes the type of the move used on it."));
        Game.game.data.addAbility(new Ability(17, "Immunity", "The immune system of the Pokémon prevents it from getting poisoned."));
        Game.game.data.addAbility(new Ability(18, "Flash Fire", "Powers up the Pokémon's Fire-type moves if it's hit by one."));
        Game.game.data.addAbility(new Ability(19, "Shield Dust", "This Pokémon's dust blocks the additional effects of attacks taken."));
        Game.game.data.addAbility(new Ability(20, "Own Tempo", "This Pokémon has its own tempo, and that prevents it from becoming confused."));
        Game.game.data.addAbility(new Ability(21, "Suction Cups", "This Pokémon uses suction cups to stay in one spot to negate all moves and items that force switching out."));
        Game.game.data.addAbility(new Ability(22, "Intimidate", "The Pokémon intimidates opposing Pokémon upon entering battle, lowering their Attack stat."));
        Game.game.data.addAbility(new Ability(23, "Shadow Tag", "This Pokémon steps on the opposing Pokémon's shadow to prevent it from escaping."));
        Game.game.data.addAbility(new Ability(24, "Rough Skin", "This Pokémon inflicts damage with its rough skin to the attacker on contact."));
        Game.game.data.addAbility(new Ability(25, "Wonder Guard", "Its mysterious power only lets supereffective moves hit the Pokémon."));
        Game.game.data.addAbility(new Ability(26, "Levitate", "By floating in the air, the Pokémon receives full immunity to all Ground-type moves."));
        Game.game.data.addAbility(new Ability(27, "Effect Spore", "Contact with the Pokémon may inflict poison, sleep, or paralysis on its attacker."));
        Game.game.data.addAbility(new Ability(28, "Synchronize", "The attacker will receive the same status condition if it inflicts a burn, poison, or paralysis to the Pokémon."));
        Game.game.data.addAbility(new Ability(29, "Clear Body", "Prevents other Pokémon's moves or Abilities from lowering the Pokémon's stats."));
        Game.game.data.addAbility(new Ability(30, "Natural Cure", "All status conditions heal when the Pokémon switches out."));
        Game.game.data.addAbility(new Ability(31, "Lightning Rod", "The Pokémon draws in all Electric-type moves. Instead of being hit by Electric-type moves, it boosts its Sp. Atk."));
        Game.game.data.addAbility(new Ability(32, "Serene Grace", "Boosts the likelihood of additional effects occurring when attacking."));
        Game.game.data.addAbility(new Ability(33, "Swift Swim", "Boosts the Pokémon's Speed stat in rain."));
        Game.game.data.addAbility(new Ability(34, "Chlorophyll", "Boosts the Pokémon's Speed stat in harsh sunlight."));
        Game.game.data.addAbility(new Ability(35, "Illuminate", "Raises the likelihood of meeting wild Pokémon by illuminating the surroundings."));
        Game.game.data.addAbility(new Ability(36, "Trace", "When it enters a battle, the Pokémon copies an opposing Pokémon's Ability."));
        Game.game.data.addAbility(new Ability(37, "Huge Power", "Doubles the Pokémon's Attack stat."));
        Game.game.data.addAbility(new Ability(38, "Poison Point", "Contact with the Pokémon may poison the attacker."));
        Game.game.data.addAbility(new Ability(39, "Inner Focus", "The Pokémon's intensely focused, and that protects the Pokémon from flinching."));
        Game.game.data.addAbility(new Ability(40, "Magma Armor", "The Pokémon is covered with hot magma, which prevents the Pokémon from becoming frozen."));
        Game.game.data.addAbility(new Ability(41, "Water Veil", "The Pokémon is covered with a water veil, which prevents the Pokémon from getting a burn."));
        Game.game.data.addAbility(new Ability(42, "Magnet Pull", "Prevents Steel-type Pokémon from escaping using its magnetic force."));
        Game.game.data.addAbility(new Ability(43, "Soundproof", "Soundproofing gives the Pokémon full immunity to all sound-based moves."));
        Game.game.data.addAbility(new Ability(44, "Rain Dish", "The Pokémon gradually regains HP in rain."));
        Game.game.data.addAbility(new Ability(45, "Sand Stream", "The Pokémon summons a sandstorm when it enters a battle."));
        Game.game.data.addAbility(new Ability(46, "Pressure", "By putting pressure on the opposing Pokémon, it raises their PP usage."));
        Game.game.data.addAbility(new Ability(47, "Thick Fat", "The Pokémon is protected by a layer of thick fat, which halves the damage taken from Fire- and Ice-type moves."));
        Game.game.data.addAbility(new Ability(48, "Early Bird", "The Pokémon awakens from sleep twice as fast as other Pokémon."));
        Game.game.data.addAbility(new Ability(49, "Flame Body", "Contact with the Pokémon may burn the attacker."));
        Game.game.data.addAbility(new Ability(50, "Run Away", "Enables a sure getaway from wild Pokémon."));
        Game.game.data.addAbility(new Ability(51, "Keen Eye", "Keen eyes prevent other Pokémon from lowering this Pokémon's accuracy."));
        Game.game.data.addAbility(new Ability(52, "Hyper Cutter", "The Pokémon's proud of its powerful pincers. They prevent other Pokémon from lowering its Attack stat."));
        Game.game.data.addAbility(new Ability(53, "Pickup", "The Pokémon may pick up the item an opposing Pokémon used during a battle. It may pick up items outside of battle, too."));
        Game.game.data.addAbility(new Ability(54, "Truant", "The Pokémon can't use a move if it had used a move on the previous turn."));
        Game.game.data.addAbility(new Ability(55, "Hustle", "Boosts the Attack stat, but lowers accuracy."));
        Game.game.data.addAbility(new Ability(56, "Cute Charm", "Contact with the Pokémon may cause infatuation."));
        Game.game.data.addAbility(new Ability(57, "Plus", "Boosts the Sp. Atk stat of the Pokémon if an ally with the Plus or Minus Ability is also in battle."));
        Game.game.data.addAbility(new Ability(58, "Minus", "Boosts the Sp. Atk stat of the Pokémon if an ally with the Plus or Minus Ability is also in battle."));
        Game.game.data.addAbility(new Ability(59, "Forecast", "The Pokémon transforms with the weather to change its type to Water, Fire, or Ice."));
        Game.game.data.addAbility(new Ability(60, "Sticky Hold", "Items held by the Pokémon are stuck fast and cannot be removed by other Pokémon."));
        Game.game.data.addAbility(new Ability(61, "Shed Skin", "The Pokémon may heal its own status conditions by shedding its skin."));
        Game.game.data.addAbility(new Ability(62, "Guts", "It's so gutsy that having a status condition boosts the Pokémon's Attack stat."));
        Game.game.data.addAbility(new Ability(63, "Marvel Scale", "The Pokémon's marvelous scales boost the Defense stat if it has a status condition."));
        Game.game.data.addAbility(new Ability(64, "Liquid Ooze", "The oozed liquid has a strong stench, which damages attackers using any draining move."));
        Game.game.data.addAbility(new Ability(65, "Overgrow", "Powers up Grass-type moves when the Pokémon's HP is low."));
        Game.game.data.addAbility(new Ability(66, "Blaze", "Powers up Fire-type moves when the Pokémon's HP is low."));
        Game.game.data.addAbility(new Ability(67, "Torrent", "Powers up Water-type moves when the Pokémon's HP is low."));
        Game.game.data.addAbility(new Ability(68, "Swarm", "Powers up Bug-type moves when the Pokémon's HP is low."));
        Game.game.data.addAbility(new Ability(69, "Rock Head", "Protects the Pokémon from recoil damage."));
        Game.game.data.addAbility(new Ability(70, "Drought", "Turns the sunlight harsh when the Pokémon enters a battle."));
        Game.game.data.addAbility(new Ability(71, "Arena Trap", "Prevents opposing Pokémon from fleeing."));
        Game.game.data.addAbility(new Ability(72, "Vital Spirit", "The Pokémon is full of vitality, and that prevents it from falling asleep."));
        Game.game.data.addAbility(new Ability(73, "White Smoke", "The Pokémon is protected by its white smoke, which prevents other Pokémon from lowering its stats."));
        Game.game.data.addAbility(new Ability(74, "Pure Power", "Using its pure power, the Pokémon doubles its Attack stat."));
        Game.game.data.addAbility(new Ability(75, "Shell Armor", "A hard shell protects the Pokémon from critical hits."));
        Game.game.data.addAbility(new Ability(76, "Air Lock", "Eliminates the effects of weather."));
        Game.game.data.addAbility(new Ability(77, "Tangled Feet", "Raises evasiveness if the Pokémon is confused."));
        Game.game.data.addAbility(new Ability(78, "Motor Drive", "Boosts its Speed stat if hit by an Electric-type move instead of taking damage."));
        Game.game.data.addAbility(new Ability(79, "Rivalry", "Becomes competitive and deals more damage to Pokémon of the same gender, but deals less to Pokémon of the opposite gender."));
        Game.game.data.addAbility(new Ability(80, "Steadfast", "The Pokémon's determination boosts the Speed stat each time the Pokémon flinches."));
        Game.game.data.addAbility(new Ability(81, "Snow Cloak", "Boosts evasiveness in a hailstorm."));
        Game.game.data.addAbility(new Ability(82, "Gluttony", "Makes the Pokémon eat a held Berry when its HP drops to half or less, which is sooner than usual."));
        Game.game.data.addAbility(new Ability(83, "Anger Point", "The Pokémon is angered when it takes a critical hit, and that maxes its Attack stat."));
        Game.game.data.addAbility(new Ability(84, "Unburden", "Boosts the Speed stat if the Pokémon's held item is used or lost."));
        Game.game.data.addAbility(new Ability(85, "Heatproof", "The heatproof body of the Pokémon halves the damage from Fire-type moves that hit it."));
        Game.game.data.addAbility(new Ability(86, "Simple", "The stat changes the Pokémon receives are doubled."));
        Game.game.data.addAbility(new Ability(87, "Dry Skin", "Restores HP in rain or when hit by Water-type moves. Reduces HP in harsh sunlight, and increases the damage received from Fire-type moves."));
        Game.game.data.addAbility(new Ability(88, "Download", "Compares an opposing Pokémon's Defense and Sp. Def stats before raising its own Attack or Sp. Atk stat—whichever will be more effective."));
        Game.game.data.addAbility(new Ability(89, "Iron Fist", "Powers up punching moves."));
        Game.game.data.addAbility(new Ability(90, "Poison Heal", "Restores HP if the Pokémon is poisoned instead of losing HP."));
        Game.game.data.addAbility(new Ability(91, "Adaptability", "Powers up moves of the same type as the Pokémon."));
        Game.game.data.addAbility(new Ability(92, "Skill Link", "Maximizes the number of times multistrike moves hit."));
        Game.game.data.addAbility(new Ability(93, "Hydration", "Heals status conditions if it's raining."));
        Game.game.data.addAbility(new Ability(94, "Solar Power", "Boosts the Sp. Atk stat in harsh sunlight, but HP decreases every turn."));
        Game.game.data.addAbility(new Ability(95, "Quick Feet", "Boosts the Speed stat if the Pokémon has a status condition."));
        Game.game.data.addAbility(new Ability(96, "Normalize", "All the Pokémon's moves become Normal type. The power of those moves is boosted a little."));
        Game.game.data.addAbility(new Ability(97, "Sniper", "Powers up moves if they become critical hits when attacking."));
        Game.game.data.addAbility(new Ability(98, "Magic Guard", "The Pokémon only takes damage from attacks."));
        Game.game.data.addAbility(new Ability(99, "No Guard", "The Pokémon employs no-guard tactics to ensure incoming and outgoing attacks always land."));
        Game.game.data.addAbility(new Ability(100, "Stall", "The Pokémon moves after all other Pokémon do."));
        Game.game.data.addAbility(new Ability(101, "Technician", "Powers up the Pokémon's weaker moves."));
        Game.game.data.addAbility(new Ability(102, "Leaf Guard", "Prevents status conditions in harsh sunlight."));
        Game.game.data.addAbility(new Ability(103, "Klutz", "The Pokémon can't use any held items."));
        Game.game.data.addAbility(new Ability(104, "Mold Breaker", "Moves can be used on the target regardless of its Abilities."));
        Game.game.data.addAbility(new Ability(105, "Super Luck", "The Pokémon is so lucky that the critical-hit ratios of its moves are boosted."));
        Game.game.data.addAbility(new Ability(106, "Aftermath", "Damages the attacker if it contacts the Pokémon with a finishing hit."));
        Game.game.data.addAbility(new Ability(107, "Anticipation", "The Pokémon can sense an opposing Pokémon's dangerous moves."));
        Game.game.data.addAbility(new Ability(108, "Forewarn", "When it enters a battle, the Pokémon can tell one of the moves an opposing Pokémon has."));
        Game.game.data.addAbility(new Ability(109, "Unaware", "When attacking, the Pokémon ignores the target Pokémon's stat changes."));
        Game.game.data.addAbility(new Ability(110, "Tinted Lens", "The Pokémon can use \"not very effective\" moves to deal regular damage."));
        Game.game.data.addAbility(new Ability(111, "Filter", "Reduces the power of supereffective attacks taken."));
        Game.game.data.addAbility(new Ability(112, "Slow Start", "For five turns, the Pokémon's Attack and Speed stats are halved."));
        Game.game.data.addAbility(new Ability(113, "Scrappy", "The Pokémon can hit Ghost-type Pokémon with Normal- and Fighting-type moves."));
        Game.game.data.addAbility(new Ability(114, "Storm Drain", "Draws in all Water-type moves. Instead of being hit by Water-type moves, it boosts its Sp. Atk."));
        Game.game.data.addAbility(new Ability(115, "Ice Body", "The Pokémon gradually regains HP in a hailstorm."));
        Game.game.data.addAbility(new Ability(116, "Solid Rock", "Reduces the power of supereffective attacks taken."));
        Game.game.data.addAbility(new Ability(117, "Snow Warning", "The Pokémon summons a hailstorm when it enters a battle."));
        Game.game.data.addAbility(new Ability(118, "Honey Gather", "The Pokémon may gather Honey after a battle."));
        Game.game.data.addAbility(new Ability(119, "Frisk", "When it enters a battle, the Pokémon can check an opposing Pokémon's held item."));
        Game.game.data.addAbility(new Ability(120, "Reckless", "Powers up moves that have recoil damage."));
        Game.game.data.addAbility(new Ability(121, "Multitype", "Changes the Pokémon's type to match the Plate or Z-Crystal it holds."));
        Game.game.data.addAbility(new Ability(122, "Flower Gift", "Boosts the Attack and Sp. Def stats of itself and allies in harsh sunlight."));
        Game.game.data.addAbility(new Ability(123, "Bad Dreams", "Reduces the HP of sleeping opposing Pokémon."));
        Game.game.data.addAbility(new Ability(124, "Pickpocket", "Steals an item from an attacker that made direct contact."));
        Game.game.data.addAbility(new Ability(125, "Sheer Force", "Removes additional effects to increase the power of moves when attacking."));
        Game.game.data.addAbility(new Ability(126, "Contrary", "Makes stat changes have an opposite effect."));
        Game.game.data.addAbility(new Ability(127, "Unnerve", "Unnerves opposing Pokémon and makes them unable to eat Berries."));
        Game.game.data.addAbility(new Ability(128, "Defiant", "Boosts the Pokémon's Attack stat sharply when its stats are lowered."));
        Game.game.data.addAbility(new Ability(129, "Defeatist", "Halves the Pokémon's Attack and Sp. Atk stats when its HP becomes half or less."));
        Game.game.data.addAbility(new Ability(130, "Cursed Body", "May disable a move used on the Pokémon."));
        Game.game.data.addAbility(new Ability(131, "Healer", "Sometimes heals an ally's status condition."));
        Game.game.data.addAbility(new Ability(132, "Friend Guard", "Reduces damage done to allies."));
        Game.game.data.addAbility(new Ability(133, "Weak Armor", "Physical attacks to the Pokémon lower its Defense stat but sharply raise its Speed stat."));
        Game.game.data.addAbility(new Ability(134, "Heavy Metal", "Doubles the Pokémon's weight."));
        Game.game.data.addAbility(new Ability(135, "Light Metal", "Halves the Pokémon's weight."));
        Game.game.data.addAbility(new Ability(136, "Multiscale", "Reduces the amount of damage the Pokémon takes while its HP is full."));
        Game.game.data.addAbility(new Ability(137, "Toxic Boost", "Powers up physical attacks when the Pokémon is poisoned."));
        Game.game.data.addAbility(new Ability(138, "Flare Boost", "Powers up special attacks when the Pokémon is burned."));
        Game.game.data.addAbility(new Ability(139, "Harvest", "May create another Berry after one is used."));
        Game.game.data.addAbility(new Ability(140, "Telepathy", "Anticipates an ally's attack and dodges it."));
        Game.game.data.addAbility(new Ability(141, "Moody", "Raises one stat sharply and lowers another every turn."));
        Game.game.data.addAbility(new Ability(142, "Overcoat", "Protects the Pokémon from things like sand, hail, and powder."));
        Game.game.data.addAbility(new Ability(143, "Poison Touch", "May poison a target when the Pokémon makes contact."));
        Game.game.data.addAbility(new Ability(144, "Regenerator", "Restores a little HP when withdrawn from battle."));
        Game.game.data.addAbility(new Ability(145, "Big Pecks", "Protects the Pokémon from Defense-lowering effects."));
        Game.game.data.addAbility(new Ability(146, "Sand Rush", "Boosts the Pokémon's Speed stat in a sandstorm."));
        Game.game.data.addAbility(new Ability(147, "Wonder Skin", "Makes status moves more likely to miss."));
        Game.game.data.addAbility(new Ability(148, "Analytic", "Boosts move power when the Pokémon moves last."));
        Game.game.data.addAbility(new Ability(149, "Illusion", "Comes out disguised as the Pokémon in the party's last spot."));
        Game.game.data.addAbility(new Ability(150, "Imposter", "The Pokémon transforms itself into the Pokémon it's facing."));
        Game.game.data.addAbility(new Ability(151, "Infiltrator", "Passes through the opposing Pokémon's barrier, substitute, and the like and strikes."));
        Game.game.data.addAbility(new Ability(152, "Mummy", "Contact with the Pokémon changes the attacker's Ability to Mummy."));
        Game.game.data.addAbility(new Ability(153, "Moxie", "The Pokémon shows moxie, and that boosts the Attack stat after knocking out any Pokémon."));
        Game.game.data.addAbility(new Ability(154, "Justified", "Being hit by a Dark-type move boosts the Attack stat of the Pokémon, for justice."));
        Game.game.data.addAbility(new Ability(155, "Rattled", "Dark-, Ghost-, and Bug-type moves scare the Pokémon and boost its Speed stat."));
        Game.game.data.addAbility(new Ability(156, "Magic Bounce", "Reflects status moves instead of getting hit by them."));
        Game.game.data.addAbility(new Ability(157, "Sap Sipper", "Boosts the Attack stat if hit by a Grass-type move instead of taking damage."));
        Game.game.data.addAbility(new Ability(158, "Prankster", "Gives priority to a status move."));
        Game.game.data.addAbility(new Ability(159, "Sand Force", "Boosts the power of Rock-, Ground-, and Steel-type moves in a sandstorm."));
        Game.game.data.addAbility(new Ability(160, "Iron Barbs", "Inflicts damage on the attacker upon contact with iron barbs."));
        Game.game.data.addAbility(new Ability(161, "Zen Mode", "Changes the Pokémon's shape when HP is half or less."));
        Game.game.data.addAbility(new Ability(162, "Victory Star", "Boosts the accuracy of its allies and itself."));
        Game.game.data.addAbility(new Ability(163, "Turboblaze", "Moves can be used on the target regardless of its Abilities."));
        Game.game.data.addAbility(new Ability(164, "Teravolt", "Moves can be used on the target regardless of its Abilities."));
        Game.game.data.addAbility(new Ability(165, "Aroma Veil", "Protects itself and its allies from attacks that limit their move choices."));
        Game.game.data.addAbility(new Ability(166, "Flower Veil", "Ally Grass-type Pokémon are protected from status conditions and the lowering of their stats."));
        Game.game.data.addAbility(new Ability(167, "Cheek Pouch", "Restores HP as well when the Pokémon eats a Berry."));
        Game.game.data.addAbility(new Ability(168, "Protean", "Changes the Pokémon's type to the type of the move it's about to use."));
        Game.game.data.addAbility(new Ability(169, "Fur Coat", "Halves the damage from physical moves."));
        Game.game.data.addAbility(new Ability(170, "Magician", "The Pokémon steals the held item of a Pokémon it hits with a move."));
        Game.game.data.addAbility(new Ability(171, "Bulletproof", "Protects the Pokémon from some ball and bomb moves."));
        Game.game.data.addAbility(new Ability(172, "Competitive", "Boosts the Sp. Atk stat sharply when a stat is lowered."));
        Game.game.data.addAbility(new Ability(173, "Strong Jaw", "The Pokémon's strong jaw boosts the power of its biting moves."));
        Game.game.data.addAbility(new Ability(174, "Refrigerate", "Normal-type moves become Ice-type moves. The power of those moves is boosted a little."));
        Game.game.data.addAbility(new Ability(175, "Sweet Veil", "Prevents itself and ally Pokémon from falling asleep."));
        Game.game.data.addAbility(new Ability(176, "Stance Change", "The Pokémon changes its form to Blade Forme when it uses an attack move and changes to Shield Forme when it uses King's Shield."));
        Game.game.data.addAbility(new Ability(177, "Gale Wings", "Gives priority to Flying-type moves when the Pokémon's HP is full."));
        Game.game.data.addAbility(new Ability(178, "Mega Launcher", "Powers up aura and pulse moves."));
        Game.game.data.addAbility(new Ability(179, "Grass Pelt", "Boosts the Pokémon's Defense stat on Grassy Terrain."));
        Game.game.data.addAbility(new Ability(180, "Symbiosis", "The Pokémon passes its item to an ally that has used up an item."));
        Game.game.data.addAbility(new Ability(181, "Tough Claws", "Powers up moves that make direct contact."));
        Game.game.data.addAbility(new Ability(182, "Pixilate", "Normal-type moves become Fairy-type moves. The power of those moves is boosted a little."));
        Game.game.data.addAbility(new Ability(183, "Gooey", "Contact with the Pokémon lowers the attacker's Speed stat."));
        Game.game.data.addAbility(new Ability(184, "Aerilate", "Normal-type moves become Flying-type moves. The power of those moves is boosted a little."));
        Game.game.data.addAbility(new Ability(185, "Parental Bond", "Parent and child each attacks."));
        Game.game.data.addAbility(new Ability(186, "Dark Aura", "Powers up each Pokémon's Dark-type moves."));
        Game.game.data.addAbility(new Ability(187, "Fairy Aura", "Powers up each Pokémon's Fairy-type moves."));
        Game.game.data.addAbility(new Ability(188, "Aura Break", "The effects of \"Aura\" Abilities are reversed to lower the power of affected moves."));
        Game.game.data.addAbility(new Ability(189, "Primordial Sea", "The Pokémon changes the weather to nullify Fire-type attacks."));
        Game.game.data.addAbility(new Ability(190, "Desolate Land", "The Pokémon changes the weather to nullify Water-type attacks."));
        Game.game.data.addAbility(new Ability(191, "Delta Stream", "The Pokémon changes the weather to eliminate all of the Flying type's weaknesses."));
        Game.game.data.addAbility(new Ability(192, "Stamina", "Boosts the Defense stat when hit by an attack."));
        Game.game.data.addAbility(new Ability(193, "Wimp Out", "The Pokémon cowardly switches out when its HP becomes half or less."));
        Game.game.data.addAbility(new Ability(194, "Emergency Exit", "The Pokémon, sensing danger, switches out when its HP becomes half or less."));
        Game.game.data.addAbility(new Ability(195, "Water Compaction", "Boosts the Pokémon's Defense stat sharply when hit by a Water-type move."));
        Game.game.data.addAbility(new Ability(196, "Merciless", "The Pokémon's attacks become critical hits if the target is poisoned."));
        Game.game.data.addAbility(new Ability(197, "Shields Down", "When its HP becomes half or less, the Pokémon's shell breaks and it becomes aggressive."));
        Game.game.data.addAbility(new Ability(198, "Stakeout", "Doubles the damage dealt to the target's replacement if the target switches out."));
        Game.game.data.addAbility(new Ability(199, "Water Bubble", "Lowers the power of Fire-type moves done to the Pokémon and prevents the Pokémon from getting a burn."));
        Game.game.data.addAbility(new Ability(200, "Steelworker", "Powers up Steel-type moves."));
        Game.game.data.addAbility(new Ability(201, "Berserk", "Boosts the Pokémon's Sp. Atk stat when it takes a hit that causes its HP to become half or less."));
        Game.game.data.addAbility(new Ability(202, "Slush Rush", "Boosts the Pokémon's Speed stat in a hailstorm."));
        Game.game.data.addAbility(new Ability(203, "Long Reach", "The Pokémon uses its moves without making contact with the target."));
        Game.game.data.addAbility(new Ability(204, "Liquid Voice", "All sound-based moves become Water-type moves."));
        Game.game.data.addAbility(new Ability(205, "Triage", "Gives priority to a healing move."));
        Game.game.data.addAbility(new Ability(206, "Galvanize", "Normal-type moves become Electric-type moves. The power of those moves is boosted a little."));
        Game.game.data.addAbility(new Ability(207, "Surge Surfer", "Doubles the Pokémon's Speed stat on Electric Terrain."));
        Game.game.data.addAbility(new Ability(208, "Schooling", "When it has a lot of HP, the Pokémon forms a powerful school. It stops schooling when its HP is low."));
        Game.game.data.addAbility(new Ability(209, "Disguise", "Once per battle, the shroud that covers the Pokémon can protect it from an attack."));
        Game.game.data.addAbility(new Ability(210, "Battle Bond", "Defeating an opposing Pokémon strengthens the Pokémon's bond with its Trainer, and it becomes Ash-Greninja. Water Shuriken gets more powerful."));
        Game.game.data.addAbility(new Ability(211, "Power Construct", "Other Cells gather to aid when its HP becomes half or less. Then the Pokémon changes its form to Complete Forme."));
        Game.game.data.addAbility(new Ability(212, "Corrosion", "The Pokémon can poison the target even if it's a Steel or Poison type."));
        Game.game.data.addAbility(new Ability(213, "Comatose", "It's always drowsing and will never wake up. It can attack without waking up."));
        Game.game.data.addAbility(new Ability(214, "Queenly Majesty", "Its majesty pressures the opposing Pokémon, making it unable to attack using priority moves."));
        Game.game.data.addAbility(new Ability(215, "Innards Out", "Damages the attacker landing the finishing hit by the amount equal to its last HP."));
        Game.game.data.addAbility(new Ability(216, "Dancer", "When another Pokémon uses a dance move, it can use a dance move following it regardless of its Speed."));
        Game.game.data.addAbility(new Ability(217, "Battery", "Powers up ally Pokémon's special moves."));
        Game.game.data.addAbility(new Ability(218, "Fluffy", "Halves the damage taken from moves that make direct contact, but doubles that of Fire-type moves."));
        Game.game.data.addAbility(new Ability(219, "Dazzling", "Surprises the opposing Pokémon, making it unable to attack using priority moves."));
        Game.game.data.addAbility(new Ability(220, "Soul-Heart", "Boosts its Sp. Atk stat every time a Pokémon faints."));
        Game.game.data.addAbility(new Ability(221, "Tangling Hair", "Contact with the Pokémon lowers the attacker's Speed stat."));
        Game.game.data.addAbility(new Ability(222, "Receiver", "The Pokémon copies the Ability of a defeated ally."));
        Game.game.data.addAbility(new Ability(223, "Power of Alchemy", "The Pokémon copies the Ability of a defeated ally."));
        Game.game.data.addAbility(new Ability(224, "Beast Boost", "The Pokémon boosts its most proficient stat each time it knocks out a Pokémon."));
        Game.game.data.addAbility(new Ability(225, "RKS System", "Changes the Pokémon's type to match the memory disc it holds."));
        Game.game.data.addAbility(new Ability(226, "Electric Surge", "Turns the ground into Electric Terrain when the Pokémon enters a battle."));
        Game.game.data.addAbility(new Ability(227, "Psychic Surge", "Turns the ground into Psychic Terrain when the Pokémon enters a battle."));
        Game.game.data.addAbility(new Ability(228, "Misty Surge", "Turns the ground into Misty Terrain when the Pokémon enters a battle."));
        Game.game.data.addAbility(new Ability(229, "Grassy Surge", "Turns the ground into Grassy Terrain when the Pokémon enters a battle."));
        Game.game.data.addAbility(new Ability(230, "Full Metal Body", "Prevents other Pokémon's moves or Abilities from lowering the Pokémon's stats."));
        Game.game.data.addAbility(new Ability(231, "Shadow Shield", "Reduces the amount of damage the Pokémon takes while its HP is full."));
        Game.game.data.addAbility(new Ability(232, "Prism Armor", "Reduces the power of supereffective attacks taken."));
        Game.game.data.addAbility(new Ability(233, "Neuroforce", "Powers up moves that are super effective."));
        Game.game.data.addAbility(new Ability(234, "Intrepid Sword", "Boosts the Pokémon's Attack stat when the Pokémon enters a battle."));
        Game.game.data.addAbility(new Ability(235, "Dauntless Shield", "Boosts the Pokémon's Defense stat when the Pokémon enters a battle."));
        Game.game.data.addAbility(new Ability(236, "Libero", "Changes the Pokémon's type to the type of the move it's about to use."));
        Game.game.data.addAbility(new Ability(237, "Ball Fetch", "If the Pokémon is not holding an item, it will fetch the Poké Ball from the first failed throw of the battle."));
        Game.game.data.addAbility(new Ability(238, "Cotton Down", "When the Pokémon is hit by an attack, it scatters cotton fluff around and lowers the Speed stat of all Pokémon except itself."));
        Game.game.data.addAbility(new Ability(239, "Propeller Tail", "Ignores the effects of opposing Pokémon's Abilities and moves that draw in moves."));
        Game.game.data.addAbility(new Ability(240, "Mirror Armor", "Bounces back only the stat-lowering effects that the Pokémon receives."));
        Game.game.data.addAbility(new Ability(241, "Gulp Missile", "When the Pokémon uses Surf or Dive, it will come back with prey. When it takes damage, it will spit out the prey to attack."));
        Game.game.data.addAbility(new Ability(242, "Stalwart", "Ignores the effects of opposing Pokémon's Abilities and moves that draw in moves."));
        Game.game.data.addAbility(new Ability(243, "Steam Engine", "Boosts the Pokémon's Speed stat drastically if hit by a Fire- or Water-type move."));
        Game.game.data.addAbility(new Ability(244, "Punk Rock", "Boosts the power of sound-based moves. The Pokémon also takes half the damage from these kinds of moves."));
        Game.game.data.addAbility(new Ability(245, "Sand Spit", "The Pokémon creates a sandstorm when it's hit by an attack."));
        Game.game.data.addAbility(new Ability(246, "Ice Scales", "The Pokémon is protected by ice scales, which halve the damage taken from special moves."));
        Game.game.data.addAbility(new Ability(247, "Ripen", "Ripens Berries and doubles their effect."));
        Game.game.data.addAbility(new Ability(248, "Ice Face", "The Pokémon's ice head can take a physical attack as a substitute, but the attack also changes the Pokémon's appearance. The ice will be restored when it hails."));
        Game.game.data.addAbility(new Ability(249, "Power Spot", "Just being next to the Pokémon powers up moves."));
        Game.game.data.addAbility(new Ability(250, "Mimicry", "Changes the Pokémon's type depending on the terrain."));
        Game.game.data.addAbility(new Ability(251, "Screen Cleaner", "When the Pokémon enters a battle, the effects of Light Screen, Reflect, and Aurora Veil are nullified for both opposing and ally Pokémon."));
        Game.game.data.addAbility(new Ability(252, "Steely Spirit", "Powers up ally Pokémon's Steel-type moves."));
        Game.game.data.addAbility(new Ability(253, "Perish Body", "When hit by a move that makes direct contact, the Pokémon and the attacker will faint after three turns unless they switch out of battle."));
        Game.game.data.addAbility(new Ability(254, "Wandering Spirit", "The Pokémon exchanges Abilities with a Pokémon that hits it with a move that makes direct contact."));
        Game.game.data.addAbility(new Ability(255, "Gorilla Tactics", "Boosts the Pokémon's Attack stat but only allows the use of the first selected move."));
        Game.game.data.addAbility(new Ability(256, "Neutralizing Gas", "If the Pokémon with Neutralizing Gas is in the battle, the effects of all Pokémon's Abilities will be nullified or will not be triggered."));
        Game.game.data.addAbility(new Ability(257, "Pastel Veil", "Protects the Pokémon and its ally Pokémon from being poisoned."));
        Game.game.data.addAbility(new Ability(258, "Hunger Switch", "The Pokémon changes its form, alternating between its Full Belly Mode and Hangry Mode after the end of each turn."));
        Game.game.data.addAbility(new Ability(259, "Cacophony", "Avoids sound-based moves. (not implemented in game)"));
        Game.game.data.addAbility(new Ability(260, "Unseen Fist", "Currently unknown."));
    }
    private void addItems() {

    }
    private void finalizeLoad() {
        Game.game.canvas.setupFont();
        Game.game.data.player.party[0] = new PartyPokemon(36);
        Game.game.data.player.party[1] = new PartyPokemon(5);

        Game.game.switchScreens(new TitleScreen());
    }
}
